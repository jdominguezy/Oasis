
@using Oasis.Models
@using Oasis.Models.Login

@{
    ViewBag.Title = "Gestion Cartera Vencida";
    var id_usuario = (User as CustomPrincipal).id_usuario;
    var as2 = new AS2Context();
    var db = new as2oasis();
    var sucursales = db.detalle_usuario_empresa_sucursal
        .Where(x => x.id_usuario == id_usuario)
        .GroupBy(x => x.sucursalOasis.nombre)
        .OrderBy(x => x.Key)
        .Select(x => x.Key);
    var empresas = db.detalle_usuario_empresa_sucursal
        .Where(x => x.id_usuario == id_usuario)
        .GroupBy(x => x.empresaOasis.nombre)
        .OrderBy(x => x.Key)
        .Select(x => x.Key);

}


<div class="row">
    <div class="col-md-12">
        <div class="card card-primary">
            <div class="card-header">
                <h2 class="card-title">Gestion Cartera Vencida</h2>
                <div class="card-tools">
                    <button type="button" class="btn bg-primary btn-sm" data-card-widget="collapse">
                        <i class="fas fa-minus"></i>
                    </button>
                    <button type="button" class="btn bg-primary btn-sm" data-card-widget="remove">
                        <i class="fas fa-times"></i>
                    </button>
                </div>
            </div>
            <!-- form start -->
            <div class="card-body">
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            <label for="empresa">Empresa</label>
                            <select class="form-control" id="empresa" name="empresa">
                                <option value="0">Todas las empresas</option>
                                @foreach (var emp in empresas)
                                {
                    <option value="@emp">@emp</option>}
                            </select>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="col" style=" text-align: center; ">
                            <label>Fecha Corte</label>
                            <div class="row" style="
                                                text-align: center;
                                                place-content: center;
                                            ">
                                <div class="col-md-10">
                                    <div class="input-group">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text">
                                                <i class="far fa-calendar-alt"></i>
                                            </span>
                                        </div>
                                        <input type="text" class="form-control float-right" id="fecha_corte">
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            <label>Region</label>
                            <select class="form-control" id="sucursal" name="sucursal">
                                <option value="0">Todas las regiones</option>
                                @foreach (var suc in sucursales)
                                {
                                    <option value="@suc">@suc</option>
                                }
                            </select>
                        </div>
                    </div>
                </div>
                <!-- /.card-body -->
                <div class="card-footer">
                    <button type="button" id="GenerarDatos" class="btn btn-primary  float-right">Generar</button>
                </div>
            </div>
    </div>
</div>


@section Scripts {
    <script>

        $("#GenerarDatos").click(function () {
            var fecha_desde = ConvertirFecha($('#fecha_corte').data('daterangepicker').startDate._d);
            var fecha_hasta = ConvertirFecha($('#fecha_corte').data('daterangepicker').endDate._d);
            var empresa = $('#empresa').val();
            var sucursal = $('#sucursal').val();
            console.log("entra")
            iniciaLoading();

            $.ajax({
                url: 'ObtenerCarteraVcda',
                type: 'POST',
                data: JSON.stringify({
                    empresa: empresa,
                    sucursal: sucursal,
                    fecha_desde: fecha_desde,
                    fecha_hasta: fecha_hasta
                    
                }),
                dataType: "JSON",
                contentType: "application/JSON",
                success: function (d) {

                    console.log(d)
                    $('#contenedorTabla').remove();
                    var contenedorTabla = document.createElement("div");
                    contenedorTabla.className = "col-md-12";
                    contenedorTabla.id = "contenedorTabla"
                    var row = document.createElement("div");
                    row.className = "row";
                    row.appendChild(contenedorTabla);
                    $('#contenedorPrimario').append(row);

                    d = JSON.parse(d);
                    var col = [];
                    var encabezado = ["Empresa",
                        "Sucursal", "Valor Factura", "Total Chq.", "Total Cartera",
                        "Vcdo. 30 Dias", "Vcdo. 60 Dias", "Vcdo. 90 Dias", "Vcdo. Mayor 90 Dias"
                        ];
                    for (var i = 0; i < d.length; i++) {
                        for (var key in d[i]) {
                            if (col.indexOf(key) === -1) {
                                col.push(key);
                            }
                        }
                    }

                    // CREATE DYNAMIC TABLE.
                    var div = document.createElement("div");
                    var row = document.createElement("div");
                    row.className = "row col-md-4";
                    var card = document.createElement("div");
                    card.className = "card";
                    card.style = "font-size: 15px;overflow-x: scroll;";
                    var cardbody = document.createElement("div");
                    cardbody.className = "card-body";
                    var table = document.createElement("table");
                    table.className = 'table table-hover tableDetalle';
                    table.id = "tableDetalle";
                    table.style = '';

                    // CREATE HTML TABLE HEADER ROW USING THE EXTRACTED HEADERS ABOVE
                    var thead = document.createElement("thead");
                    table.appendChild(thead);
                    var tr_head = document.createElement("tr");
                    for (var i = 0; i < encabezado.length; i++) {
                        var th = document.createElement("th");      // TABLE HEADER.
                        th.innerHTML = encabezado[i];
                        tr_head.appendChild(th);
                    }

                    thead.appendChild(tr_head);

                    var tbody = document.createElement("tbody");
                    table.appendChild(tbody);
                    var tr_body = document.createElement("tr");
                    // ADD JSON DATA TO THE TABLE AS ROWS.
                    for (var i = 0; i < d.length; i++) {
                        tr_body = document.createElement("tr");
                        for (var j = 0; j < col.length; j++) {
                            var tabCell = tr_body.insertCell(-1);
                            tabCell.innerHTML = d[i][col[j]];
                            tabCell.style = ' white-space: nowrap;';
                        }
                        //var tabCell = tr_body.insertCell(-1);
                        //tabCell.innerHTML = '<button class="btn btn-info imprimir" onClick="imprimirOrden(\'' + d[i][col[0]] + '\')" >Imprimir</button>';
                        //tabCell.style = ' white-space: nowrap;';
                        tbody.appendChild(tr_body);
                    }

                    cardbody.appendChild(table);
                    card.appendChild(cardbody);
                    div.appendChild(card);
                    //CrearTablaDetalle(div.outerHTML, titulo);
                    $('#contenedorTabla').append(div);
                    $('#tableDetalle').DataTable({
                        dom: 'Bfrtip',
                        buttons: [
                            'copy', 'csv', 'excel', 'pdf', 'print'
                        ],
                        language: {
                            url: 'https://cdn.datatables.net/plug-ins/1.10.24/i18n/Spanish.json'
                        }
                    });

                    var presupuesto = d;
                    var vendedores = presupuesto.map(presupuesto => presupuesto.sucursal);
                    var ventas = presupuesto.map(presupuesto => presupuesto.cartera_total);
                    var cobros = presupuesto.map(presupuesto => presupuesto.menor_30);
                    GeneraGraficos(presupuesto);

                    cierraLoading();
                },
                error: function (e) {
                    cierraLoading();
                    Toast.fire({
                        icon: 'error',
                        title: 'Hubo un error al intentar generar.'
                    })
                }
            })
        });

        function GeneraGraficos(presupuesto) {
            $('#rowcontenedorGraficos').remove();
            const elementos = $.parseHTML('<h3 class="card-title"><i class="fas fa-th mr-1"></i>  Totales                </h3>        <div class="card-tools">            <button type="button" class="btn bg-defaultbtn-sm" data-card-widget="collapse">                <i class="fas fa-minus"></i>            </button>            <button type="button" class="btn bg-defaultbtn-sm" data-card-widget="remove">                <i class="fas fa-times"></i>            </button>');

            var canva = document.createElement("canvas");
            canva.id = "contenedorBarra";
            canva.width = 400;
            canva.height = 200;

            var canva2 = document.createElement("canvas");
            canva2.id = "contenedorPastel";
            canva2.width = 400;
            canva2.height = 200;

            var cardHeader = document.createElement("div");
            cardHeader.className = "card-header border-0";
            cardHeader.appendChild(elementos[0].cloneNode(true));
            cardHeader.appendChild(elementos[1].cloneNode(true));
            cardHeader.appendChild(elementos[2].cloneNode(true));

            var cardHeader2 = document.createElement("div");
            cardHeader2.className = "card-header border-0";
            cardHeader2.appendChild(elementos[0].cloneNode(true));
            cardHeader2.appendChild(elementos[1].cloneNode(true));
            cardHeader2.appendChild(elementos[2].cloneNode(true));

            var cardBody = document.createElement("div");
            cardBody.className = "card-body";
            cardBody.appendChild(canva);

            var cardBody2 = document.createElement("div");
            cardBody2.className = "card-body";
            cardBody2.appendChild(canva2);

            var cardBarra = document.createElement("div");
            cardBarra.className = "card";
            cardBarra.appendChild(cardHeader);
            cardBarra.appendChild(cardBody);

            var cardPastel = document.createElement("div");
            cardPastel.className = "card";
            cardPastel.appendChild(cardHeader2);
            cardPastel.appendChild(cardBody2);

            var contenedorGraficos2 = document.createElement("div");
            contenedorGraficos2.className = "col-md-12";
            contenedorGraficos2.appendChild(cardPastel);

            var contenedorGraficos = document.createElement("div");
            contenedorGraficos.className = "col-md-12";

            contenedorGraficos.appendChild(cardBarra);
            contenedorGraficos2.appendChild(cardPastel);

            var row2 = document.createElement("div");
            row2.className = "row";
            row2.appendChild(contenedorGraficos);
            row2.appendChild(contenedorGraficos2);
            row2.id = "rowcontenedorGraficos";

            $('#contenedorPrimario').append(row2);
            GraficoBarras('contenedorBarra', 'bar', presupuesto);
            GraficoBarras('contenedorPastel', 'pie', presupuesto);
        }

        function GraficoBarras(identificador, tipoGrafico, presupuesto) {
            var ctx = document.getElementById(identificador).getContext('2d');

            const dataLength = presupuesto.length;
            /* Create color array */
            const colorScale = d3.interpolateInferno;

            const colorRangeInfo = {
                colorStart: 0.1,
                colorEnd: 1,
                useEndAsStart: false,
            };
            var COLORS = interpolateColors(dataLength, colorScale, colorRangeInfo);
            var myChart = new Chart(ctx, {
                type: tipoGrafico,
                data: {
                    labels: presupuesto.map(presupuesto => presupuesto.sucursal),
                    datasets: [{
                        label: 'Cartera',
                        data: presupuesto.map(presupuesto => presupuesto.cartera_total),
                        backgroundColor: COLORS,
                        hoverBackgroundColor: COLORS,
                        parsing: {
                            yAxisKey: 'cartera_total'
                        },
                        borderWidth: 1
                    },
                    {
                        label: 'Vencimiento',
                        data: presupuesto.map(presupuesto => presupuesto.menor_60),
                        backgroundColor: COLORS,
                        hoverBackgroundColor: COLORS,
                        parsing: {
                            yAxisKey: 'menor_60'
                        },
                        borderWidth: 1
                    }]
                },
                options: {
                    //responsive: false,
                    scales: {
                        x: {
                            stacked: true
                        },
                        y: {
                            beginAtZero: true,
                            stacked: true
                        }
                    }
                }
            });
        }

        $('#fecha_corte').daterangepicker({
            locale: {
                format: 'DD/MM/YYYY',
                "daysOfWeek": [
                    "Do",
                    "Lu",
                    "Ma",
                    "Mi",
                    "Ju",
                    "Vi",
                    "Sa"
                ],
                "monthNames": [
                    "Enero",
                    "Febrero",
                    "Marzo",
                    "Abril",
                    "Mayo",
                    "Junio",
                    "Julio",
                    "Agosto",
                    "Septiembre",
                    "Octubre",
                    "Noviembre",
                    "Diciembre"
                ],
            },
            startDate: firstDay,
            endDate: lastDay
        });

    </script>
}